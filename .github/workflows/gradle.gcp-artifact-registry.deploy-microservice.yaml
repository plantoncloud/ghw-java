name: build-and-deploy

on:
  workflow_call:
    secrets:
      PLANTON_CLOUD_CLIENT_ID:
        required: true
      PLANTON_CLOUD_CLIENT_SECRET:
        required: true
    inputs:
      JAVA_DISTRIBUTION:
        description: 'distribution of java to be specified in accordance with the setup-java action.Ref: https://github.com/actions/setup-java#supported-distributions'
        type: string
        required: false
        default: 'adopt-openj9'
      JAVA_VERSION:
        description: 'version of java to be specified in accordance with the setup-java action.Ref: https://github.com/actions/setup-java#usage'
        type: string
        required: false
        default: '17'
      PLANTON_CLOUD_ARTIFACT_STORE_ID:
        required: true
        type: string
      DOCKER_REPO_HOSTNAME:
        required: true
        type: string
      CONTAINER_IMAGE_REPO:
        required: true
        type: string
      CONTAINER_IMAGE_TAG:
        required: true
        type: string
      PLANTON_CLOUD_ENVIRONMENT_ID:
        required: true
        type: string
      PLANTON_CLOUD_ENVIRONMENT_NAME:
        required: true
        type: string
      PLANTON_CLOUD_MICROSERVICE_INSTANCE_VERSION:
        required: true
        type: string

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.PLANTON_CLOUD_ENVIRONMENT_ID }}-${{ inputs.PLANTON_CLOUD_MICROSERVICE_INSTANCE_VERSION }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Install Planton CLI
        uses: plantoncloud/install-planton-cli-action@main
      
      - name: Login to Planton Cloud
        uses: plantoncloud/gha-planton-cli-login@main
        with:
          planton_cloud_client_id: ${{ secrets.PLANTON_CLOUD_CLIENT_ID }}
          planton_cloud_client_secret: ${{ secrets.PLANTON_CLOUD_CLIENT_SECRET }}
      
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: '${{ inputs.JAVA_DISTRIBUTION }}'
          java-version: '${{ inputs.JAVA_VERSION }}'
          cache: 'gradle'

      - name: Setup GCP Artifact Registry Maven Credentials
        uses: plantoncloud/setup-gcp-artifact-registry-maven-credentials-action@main
        with:
          planton_cloud_artifact_store_id: ${{ inputs.PLANTON_CLOUD_ARTIFACT_STORE_ID }}
          key_type: reader

      - name: Build with Gradle
        run: ./gradlew build --no-daemon
      
      - name: GCP Artifact Registry Docker Login
        uses: plantoncloud/gcp-artifact-registry-docker-login-action@main
        with:
          planton_cloud_artifact_store_id: ${{ inputs.PLANTON_CLOUD_ARTIFACT_STORE_ID }}
          docker_repo_hostname: ${{ inputs.DOCKER_REPO_HOSTNAME }}
      
      - name: Build & Push Docker Image
        uses: plantoncloud/build-and-push-docker-image-action@main
        with:
          docker_repo_hostname: ${{ inputs.DOCKER_REPO_HOSTNAME }}
          container_image_repo: ${{ inputs.CONTAINER_IMAGE_REPO }}
          container_image_tag: ${{ inputs.CONTAINER_IMAGE_TAG }}

      - name: Deploy Microservice
        uses: plantoncloud/gha-deploy-microservice@main
        with:
          planton_cloud_environment_name: ${{ inputs.PLANTON_CLOUD_ENVIRONMENT_NAME }}
          planton_cloud_microservice_instance_version: ${{ inputs.PLANTON_CLOUD_MICROSERVICE_INSTANCE_VERSION }}
          container_image_tag: ${{ inputs.CONTAINER_IMAGE_TAG }}
